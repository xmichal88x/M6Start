

from ___CONF import * 
import sys
import time
import json

JSON_FILE = "narzedzia.json"

# Pobranie aktualnej pozycji maszyny
machine_pos = d.getPosition(CoordMode.Machine)

# Podniesienie osi Z do bezpiecznej wysokości
machine_pos[Z] = Z_SAFE
d.moveToPosition(CoordMode.Machine, machine_pos, FEED_PROBE_MOVE)

# Przejazd do pozycji startowej w osiach X i Y (jeśli włączone w ustawieniach)
if PROBE_MOVE_X:
    machine_pos[X] = PROBE_START_X
if PROBE_MOVE_Y:
    machine_pos[Y] = PROBE_START_Y
d.moveToPosition(CoordMode.Machine, machine_pos, FEED_PROBE_MOVE)

# Przejazd do pozycji startowej w osi Z
machine_pos[Z] = PROBE_START_Z
d.moveToPosition(CoordMode.Machine, machine_pos, FEED_PROBE_MOVE)

# Szybki pomiar długości narzędzia
machine_pos[Z] = PROBE_END_Z
probeResult = d.executeProbing(CoordMode.Machine, machine_pos, PROBE_INDEX, FEED_PROBE_FAST)

if not probeResult:
    sys.exit("fast probing failed!")

# Podniesienie osi Z przed dokładnym pomiarem
d.moveAxisIncremental(Axis.Z, PROBE_LIFT_UP_DIST, FEED_PROBE_MOVE)
time.sleep(PROBE_FINE_DELAY)

# Dokładny (wolniejszy) pomiar długości narzędzia
probeResult = d.executeProbing(CoordMode.Machine, machine_pos, PROBE_INDEX, FEED_PROBE_SLOW)

if not probeResult:
    sys.exit("slow probing failed!")

# Pobranie pozycji osi Z, w której narzędzie dotknęło sondy podczas dokładnego pomiaru
probeFinishPos = d.getProbingPosition(CoordMode.Machine)

# Sprawdzenie różnicy pomiędzy szybkim a dokładnym pomiarem (jeśli włączone w ustawieniach)
probeDiff = abs(fastProbeFinishPos[Axis.Z.value] - probeFinishPos[Axis.Z.value])
if probeDiff > fineProbeMaxAllowedDiff and checkFineProbingDiff:
    errMsg = "ERROR: fine probing difference limit exceeded! (diff: {:.3f})".format(probeDiff)
    sys.exit(errMsg)

# Obliczenie długości narzędzia względem narzędzia referencyjnego
toolOffset = probeFinishPos[Axis.Z.value] - refToolProbePos

# Ustawienie zmierzonej długości narzędzia w SimCNC
d.setToolLength(toolNr, toolOffset)

# Podniesienie osi Z do pozycji bezpiecznej (np. 0)
pos[Axis.Z.value] = 0
d.moveToPosition(CoordMode.Machine, pos, vel)

# Zakończenie makra i wyświetlenie komunikatu z wynikiem pomiaru
print("Tool({:d}) offset set to: {:.4f}".format(toolNr, toolOffset))
